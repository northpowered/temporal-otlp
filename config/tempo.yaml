server:
  http_listen_port: 3200

multitenancy_enabled: true

distributor:
  receivers:                           # this configuration will listen on all ports and protocols that tempo is capable of.
    jaeger:                            # the receives all come from the OpenTelemetry collector.  more configuration information can
      protocols:                       # be found there: https://github.com/open-telemetry/opentelemetry-collector/tree/main/receiver
        thrift_http:                   #
        grpc:                          # for a production deployment you should only enable the receivers you need!
        thrift_binary:
        thrift_compact:
    zipkin:
    otlp:
      protocols:
        http:
        grpc:
    opencensus:


memberlist:
  abort_if_cluster_join_fails: false
  bind_port: 7946
  join_members:
  - tempo-ingester-1:7946
  - tempo-ingester-2:7946
  - tempo-ingester-3:7946


ingester:
  max_block_duration: 5m               # cut the headblock when this much time passes. this is being set for demo purposes and should probably be left alone normally

compactor:
  compaction:
    block_retention: 1h                # overall Tempo trace retention. set for demo purposes


querier:
  frontend_worker:
    frontend_address: tempo-query-frontend-1:9095


metrics_generator:

  processor:

    service_graphs:
      wait: 30s
      # Workers is the amount of workers that will be used to process the edges
      workers: 20
      dimensions:
        - service.name

  registry:
    external_labels:
      source: tempo
      cluster: otlp-test-dp
  storage:
    path: /tmp/tempo/generator/wal
    remote_write:
      - url: http://load-balancer:9009/api/v1/push
        send_exemplars: true
        headers:
          "X-Scope-OrgID": "otlp-test-cp"

storage:
  trace:
    backend: s3                        # backend configuration to use             # where to store the the wal locally
    s3:
      bucket: tempo                    # how to store data in s3
      endpoint: minio:9000
      access_key: superuser
      secret_key: supersecret
      insecure: true
    wal:
      path: /tmp/tempo/wal             # where to store the the wal locally
    local:
      path: /tmp/tempo/blocks

overrides:
  metrics_generator_processors: [service-graphs, span-metrics] # enables metrics generator