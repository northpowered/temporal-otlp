services:

# Monitoring  tools

  otel-test-jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: otel-test-jaeger
    ports:
      - "127.0.0.1:6831:6831/udp"
      - "127.0.0.1:16686:16686"
      - "127.0.0.1:16687:16687"
      - "127.0.0.1:16685:16685"
      - "127.0.0.1:14269:14269"
    environment:
      -  METRICS_STORAGE_TYPE=prometheus
      -  PROMETHEUS_SERVER_URL=http://otel-test-prometheus:9090
      -  PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR=true
      -  MONITOR_MENU_ENABLED=true

  otel-test-prometheus:
    image: prom/prometheus:latest
    container_name: otel-test-prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "127.0.0.1:9090:9090"

  otel-test-grafana:
    image: grafana/grafana:9.4.3
    container_name: otel-test-grafana
    volumes:
      - ./grafana_data:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "127.0.0.1:3000:3000"

  otel-test-tempo:
    image: grafana/tempo:latest
    container_name: otel-test-tempo
    command: ["-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
    ports:
      - "127.0.0.1:14268:14268"  # jaeger ingest
      - "127.0.0.1:3200:3200"   # tempo
      - "127.0.0.1:9095:9095" # tempo grpc
      - "127.0.0.1:4317:4317"  # otlp grpc
      - "127.0.0.1:4318:4318"  # otlp http
      - "127.0.0.1:9411:9411"   # zipkin

# Temporal services

  otel-test-elasticsearch:
    container_name: otel-test-temporal-elasticsearch
    environment:
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - xpack.security.enabled=false
    image: elasticsearch:${ELASTICSEARCH_VERSION}
    networks:
      - otlp_network
    expose:
      - 9200
    volumes:
      - /var/lib/elasticsearch/data
  
  otel-test-postgresql:
    container_name: otel-test-temporal-postgresql
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: postgres:${POSTGRESQL_VERSION}
    networks:
      - otlp_network
    expose:
      - 5432
    volumes:
      - /var/lib/postgresql/data

  otel-test-temporal:
    container_name: otel-test-temporal
    depends_on:
      - otel-test-postgresql
      - otel-test-elasticsearch
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=otel-test-postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
      - ENABLE_ES=true
      - ES_SEEDS=otel-test-elasticsearch
      - ES_VERSION=v7
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    networks:
      - otlp_network
    ports:
      - 7233:7233
    labels:
      kompose.volume.type: configMap
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig

  temporal-admin-tools:
    container_name: otel-test-temporal-admin-tools
    depends_on:
      - otel-test-temporal
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:${TEMPORAL_VERSION}
    networks:
      - otlp_network
    stdin_open: true
    tty: true

  otel-test-temporal-ui:
    container_name: otel-test-temporal-ui
    depends_on:
      - otel-test-temporal
    environment:
      - TEMPORAL_ADDRESS=otel-test-temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:${TEMPORAL_UI_VERSION}
    networks:
      - otlp_network
    ports:
      - 8080:8080

# Networking

networks:
  otlp_network:
    driver: bridge
    name: otlp_network