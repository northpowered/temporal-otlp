server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: "info"


clients:
  - url: http://load-balancer:3100/loki/api/v1/push
    tenant_id: docker


scrape_configs:
  - job_name: otel-test-dp
    # use docker.sock to filter containers
    docker_sd_configs:
      - host: "unix:///var/run/docker.sock"
        refresh_interval: 15s
        filters:
          - name: label
            values: ["com.host.plane=dp"]
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
    pipeline_stages:
      - json:
          expressions:
            output: text
            timestamp: "record.time.repr"
            # record: record
            level: "record.level.name"
            x_service_name: "record.extra.service_letter"
            # span_id: "record.extra.span_id"
            # trace_id: "record.extra.trace_id"
            x_request_id: "record.extra.x_request_id"
      - labels:
          level: level
          # full_log_body: record
          x_service_name: x_service_name
          # span_id: span_id
          # trace_id: trace_id
          x_request_id: x_request_id
      - timestamp:
          format: RFC3339
          source: timestamp
      - output:
          source: output

  - job_name: otel-test-cp
    # use docker.sock to filter containers
    docker_sd_configs:
      - host: "unix:///var/run/docker.sock"
        refresh_interval: 15s
        filters:
          - name: label
            values: ["com.host.plane=cp"]
    # use container name to create a loki label
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'